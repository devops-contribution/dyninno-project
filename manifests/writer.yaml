---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: writer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: writer
  template:
    metadata:
      labels:
        app: writer
    spec:
      initContainers:
        - name: init-mysql
          image: mysql:latest
          command: ["sh", "-c", "
            until mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -D $MYSQL_DATABASE -e 'SELECT 1'; do
              echo 'Waiting for MySQL...';
              sleep 5;
            done;
            mysql -h $MYSQL_HOST -u $MYSQL_USER -p$MYSQL_PASSWORD -D $MYSQL_DATABASE -e '
              CREATE TABLE IF NOT EXISTS data (
                id INT AUTO_INCREMENT PRIMARY KEY,
                value DOUBLE NOT NULL
              );
            ';
          "]
          env:
            - name: MYSQL_HOST
              #value: "mysql-0.mysql.default.svc.cluster.local"
              value: "mysql-master-0.mysql-master.default.svc.cluster.local"
            - name: MYSQL_USER
              value: "root"
            - name: MYSQL_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DATABASE
              value: "test"

        - name: setup-master
          image: mysql:latest
          command: ["/bin/sh", "-c"]
          args: |
            - |
              echo "Waiting for MySQL to be ready..."
              until mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1"; do
                sleep 5
              done

              echo "Enabling binary logs for replication..."
              mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "
                RESET MASTER;
                GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%' IDENTIFIED BY 'replication_password';
                FLUSH PRIVILEGES;
              "
              echo "Fetching Master Status..."
              mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "SHOW MASTER STATUS\G" > /replication/master-status.txt

              echo "Master status saved:"
              cat /replication/master-status.txt
          volumeMounts:
            - name: replication-volume
              mountPath: /replication
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword"

      containers:
        - name: writer
          image: docker.io/muk007/writer:version-20
          ports:
            - containerPort: 8000
          env:
            - name: MYSQL_HOST
              #value: "mysql-0.mysql.default.svc.cluster.local"
              value: "mysql-master-0.mysql-master.default.svc.cluster.local"
            - name: MYSQL_USER
              value: "root"
            - name: MYSQL_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DATABASE
              value: "test"
      volumes:
        - name: replication-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: writer-service
  labels:
    app: writer
spec:
  selector:
    app: writer
  ports:
    - name: metrics
      protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
